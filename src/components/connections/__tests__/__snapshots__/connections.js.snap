// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render Connections render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ConnectionsPure
    name="xxx"
    pinFree={2}
    pinQuantity={2}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Container>
        <div
          className="title"
        >
          <Styled(Text)
            isThreeSixB={true}
            size={46}
            sizeTablet={32}
          >
            <FormattedMessage
              id="connections_title"
              values={Object {}}
            />
          </Styled(Text)>
        </div>
        <div
          className={undefined}
        >
          <Styled(Text)
            size={20}
            sizeTablet={16}
          >
            <FormattedMessage
              id="connections_text"
              values={
                Object {
                  "name": "xxx",
                  "pinFree": 2,
                  "pinQuantity": 2,
                }
              }
            />
          </Styled(Text)>
        </div>
        <div
          className="button"
        >
          <Styled(Button)
            color={null}
            onClick={undefined}
            wide={true}
          >
            <Styled(Text)
              fontInherit={true}
              size={14}
              uppercase={true}
            >
              <FormattedMessage
                id="connections_button"
                values={Object {}}
              />
            </Styled(Text)>
          </Styled(Button)>
        </div>
      </Container>,
      "className": "connections",
      "id": "connections",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="title"
          >
            <Styled(Text)
              isThreeSixB={true}
              size={46}
              sizeTablet={32}
            >
              <FormattedMessage
                id="connections_title"
                values={Object {}}
              />
            </Styled(Text)>
          </div>,
          <div
            className={undefined}
          >
            <Styled(Text)
              size={20}
              sizeTablet={16}
            >
              <FormattedMessage
                id="connections_text"
                values={
                  Object {
                    "name": "xxx",
                    "pinFree": 2,
                    "pinQuantity": 2,
                  }
                }
              />
            </Styled(Text)>
          </div>,
          <div
            className="button"
          >
            <Styled(Button)
              color={null}
              onClick={undefined}
              wide={true}
            >
              <Styled(Text)
                fontInherit={true}
                size={14}
                uppercase={true}
              >
                <FormattedMessage
                  id="connections_button"
                  values={Object {}}
                />
              </Styled(Text)>
            </Styled(Button)>
          </div>,
          undefined,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Styled(Text)
              isThreeSixB={true}
              size={46}
              sizeTablet={32}
            >
              <FormattedMessage
                id="connections_title"
                values={Object {}}
              />
            </Styled(Text)>,
            "className": "title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormattedMessage
                id="connections_title"
                values={Object {}}
              />,
              "isThreeSixB": true,
              "size": 46,
              "sizeTablet": 32,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "connections_title",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Styled(Text)
              size={20}
              sizeTablet={16}
            >
              <FormattedMessage
                id="connections_text"
                values={
                  Object {
                    "name": "xxx",
                    "pinFree": 2,
                    "pinQuantity": 2,
                  }
                }
              />
            </Styled(Text)>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormattedMessage
                id="connections_text"
                values={
                  Object {
                    "name": "xxx",
                    "pinFree": 2,
                    "pinQuantity": 2,
                  }
                }
              />,
              "size": 20,
              "sizeTablet": 16,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "connections_text",
                "values": Object {
                  "name": "xxx",
                  "pinFree": 2,
                  "pinQuantity": 2,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Styled(Button)
              color={null}
              onClick={undefined}
              wide={true}
            >
              <Styled(Text)
                fontInherit={true}
                size={14}
                uppercase={true}
              >
                <FormattedMessage
                  id="connections_button"
                  values={Object {}}
                />
              </Styled(Text)>
            </Styled(Button)>,
            "className": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Text)
                fontInherit={true}
                size={14}
                uppercase={true}
              >
                <FormattedMessage
                  id="connections_button"
                  values={Object {}}
                />
              </Styled(Text)>,
              "color": null,
              "onClick": undefined,
              "wide": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormattedMessage
                  id="connections_button"
                  values={Object {}}
                />,
                "fontInherit": true,
                "size": 14,
                "uppercase": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "connections_button",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        undefined,
      ],
      "type": [Function],
    },
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Container>
          <div
            className="title"
          >
            <Styled(Text)
              isThreeSixB={true}
              size={46}
              sizeTablet={32}
            >
              <FormattedMessage
                id="connections_title"
                values={Object {}}
              />
            </Styled(Text)>
          </div>
          <div
            className={undefined}
          >
            <Styled(Text)
              size={20}
              sizeTablet={16}
            >
              <FormattedMessage
                id="connections_text"
                values={
                  Object {
                    "name": "xxx",
                    "pinFree": 2,
                    "pinQuantity": 2,
                  }
                }
              />
            </Styled(Text)>
          </div>
          <div
            className="button"
          >
            <Styled(Button)
              color={null}
              onClick={undefined}
              wide={true}
            >
              <Styled(Text)
                fontInherit={true}
                size={14}
                uppercase={true}
              >
                <FormattedMessage
                  id="connections_button"
                  values={Object {}}
                />
              </Styled(Text)>
            </Styled(Button)>
          </div>
        </Container>,
        "className": "connections",
        "id": "connections",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <div
              className="title"
            >
              <Styled(Text)
                isThreeSixB={true}
                size={46}
                sizeTablet={32}
              >
                <FormattedMessage
                  id="connections_title"
                  values={Object {}}
                />
              </Styled(Text)>
            </div>,
            <div
              className={undefined}
            >
              <Styled(Text)
                size={20}
                sizeTablet={16}
              >
                <FormattedMessage
                  id="connections_text"
                  values={
                    Object {
                      "name": "xxx",
                      "pinFree": 2,
                      "pinQuantity": 2,
                    }
                  }
                />
              </Styled(Text)>
            </div>,
            <div
              className="button"
            >
              <Styled(Button)
                color={null}
                onClick={undefined}
                wide={true}
              >
                <Styled(Text)
                  fontInherit={true}
                  size={14}
                  uppercase={true}
                >
                  <FormattedMessage
                    id="connections_button"
                    values={Object {}}
                  />
                </Styled(Text)>
              </Styled(Button)>
            </div>,
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Styled(Text)
                isThreeSixB={true}
                size={46}
                sizeTablet={32}
              >
                <FormattedMessage
                  id="connections_title"
                  values={Object {}}
                />
              </Styled(Text)>,
              "className": "title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormattedMessage
                  id="connections_title"
                  values={Object {}}
                />,
                "isThreeSixB": true,
                "size": 46,
                "sizeTablet": 32,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "connections_title",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Styled(Text)
                size={20}
                sizeTablet={16}
              >
                <FormattedMessage
                  id="connections_text"
                  values={
                    Object {
                      "name": "xxx",
                      "pinFree": 2,
                      "pinQuantity": 2,
                    }
                  }
                />
              </Styled(Text)>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormattedMessage
                  id="connections_text"
                  values={
                    Object {
                      "name": "xxx",
                      "pinFree": 2,
                      "pinQuantity": 2,
                    }
                  }
                />,
                "size": 20,
                "sizeTablet": 16,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "connections_text",
                  "values": Object {
                    "name": "xxx",
                    "pinFree": 2,
                    "pinQuantity": 2,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Styled(Button)
                color={null}
                onClick={undefined}
                wide={true}
              >
                <Styled(Text)
                  fontInherit={true}
                  size={14}
                  uppercase={true}
                >
                  <FormattedMessage
                    id="connections_button"
                    values={Object {}}
                  />
                </Styled(Text)>
              </Styled(Button)>,
              "className": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Text)
                  fontInherit={true}
                  size={14}
                  uppercase={true}
                >
                  <FormattedMessage
                    id="connections_button"
                    values={Object {}}
                  />
                </Styled(Text)>,
                "color": null,
                "onClick": undefined,
                "wide": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <FormattedMessage
                    id="connections_button"
                    values={Object {}}
                  />,
                  "fontInherit": true,
                  "size": 14,
                  "uppercase": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "id": "connections_button",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            "type": "div",
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
