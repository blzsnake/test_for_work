// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render Pins render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Pins
    onPinClick={[Function]}
    pins={
      Array [
        "string",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <li
          className={undefined}
          onClick={undefined}
          onKeyDown={undefined}
          role="button"
          tabIndex={0}
        >
          <Styled(Text)
            size={16}
            sizeTablet={14}
            uppercase={true}
          >
            string
          </Styled(Text)>
        </li>,
      ],
      "className": "pins",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Styled(Text)
            size={16}
            sizeTablet={14}
            uppercase={true}
          >
            string
          </Styled(Text)>,
          "className": undefined,
          "onClick": undefined,
          "onKeyDown": undefined,
          "role": "button",
          "tabIndex": 0,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "string",
            "size": 16,
            "sizeTablet": 14,
            "uppercase": true,
          },
          "ref": null,
          "rendered": "string",
          "type": [Function],
        },
        "type": "li",
      },
    ],
    "type": "ul",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li
            className={undefined}
            onClick={undefined}
            onKeyDown={undefined}
            role="button"
            tabIndex={0}
          >
            <Styled(Text)
              size={16}
              sizeTablet={14}
              uppercase={true}
            >
              string
            </Styled(Text)>
          </li>,
        ],
        "className": "pins",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Styled(Text)
              size={16}
              sizeTablet={14}
              uppercase={true}
            >
              string
            </Styled(Text)>,
            "className": undefined,
            "onClick": undefined,
            "onKeyDown": undefined,
            "role": "button",
            "tabIndex": 0,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "string",
              "size": 16,
              "sizeTablet": 14,
              "uppercase": true,
            },
            "ref": null,
            "rendered": "string",
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": "ul",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
